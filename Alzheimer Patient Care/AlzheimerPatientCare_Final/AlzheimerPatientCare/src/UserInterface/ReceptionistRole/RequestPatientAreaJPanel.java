/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ReceptionistRole;

import Business.Patient.Patient;
import Business.Patient.PatientDirectory;
import Business.Enterprise.Enterprise;
import Business.Enterprise.EnterpriseDirectory;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Security.Activity;
import Business.Security.SessionLog;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Business.WorkQueue.WorkRequestDoctor;

import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prashant
 */
public class RequestPatientAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestChildAreaJPanel
     */
    private JPanel userProcessContainer;
    private Patient patient;
    private PatientDirectory patientDirectory;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private EnterpriseDirectory entdir;
    private SessionLog session;
    ArrayList<PatientDirectory> patientList;
    public RequestPatientAreaJPanel(JPanel userProcessContainer,Patient patient, UserAccount userAccount,Enterprise enterprise,EnterpriseDirectory entdir,SessionLog session) {
        initComponents();
      //  populatePatientRequest();
        this.userProcessContainer = userProcessContainer;
        this.patient = patient;
        this.userAccount = userAccount;
        this.enterprise=enterprise;
        this.entdir=entdir;
        this.session=session;
        this.session=session;
          Activity a = session.getActivityDirectory().addActivity();
        a.setActivityTime(new Date());
        a.setPanelName("RequestPatientAreaJPanel");
       
        patientList = new ArrayList<PatientDirectory>();
        patientName.setText(this.patient.getName());
        populatePatientRequest();
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        messagetxt = new javax.swing.JTextField();
        reqTest = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        patientName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel1.setText("ENTER MESSAGE");

        messagetxt.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        reqTest.setBackground(new java.awt.Color(0, 0, 0));
        reqTest.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        reqTest.setForeground(new java.awt.Color(255, 255, 255));
        reqTest.setText("REQUEST");
        reqTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reqTestActionPerformed(evt);
            }
        });

        backBtn.setBackground(new java.awt.Color(0, 0, 0));
        backBtn.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("<< BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        patientName.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        patientName.setText("jLabel2");

        jLabel2.setFont(new java.awt.Font("Bookman Old Style", 1, 14)); // NOI18N
        jLabel2.setText("PATIENT NAME");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESSAGE", "RECEIVER", "STATUS", "RESULT", "PATIENT NAME", "PATIENT AGE", "ADDRESS", "BEHAVIOURAL PROBLEM", "PRESCRIPTION"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(0).setResizable(false);
            requestTable.getColumnModel().getColumn(1).setResizable(false);
            requestTable.getColumnModel().getColumn(2).setResizable(false);
            requestTable.getColumnModel().getColumn(3).setResizable(false);
            requestTable.getColumnModel().getColumn(4).setResizable(false);
            requestTable.getColumnModel().getColumn(5).setResizable(false);
            requestTable.getColumnModel().getColumn(6).setResizable(false);
            requestTable.getColumnModel().getColumn(7).setResizable(false);
            requestTable.getColumnModel().getColumn(8).setResizable(false);
        }

        jLabel7.setFont(new java.awt.Font("Bookman Old Style", 1, 18)); // NOI18N
        jLabel7.setText("PROCESSING REQUEST");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(610, 610, 610)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(38, 38, 38)
                                .addComponent(patientName))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1437, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(61, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(messagetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(reqTest)
                .addGap(483, 483, 483))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(patientName))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(messagetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reqTest, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(249, 249, 249))))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void reqTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reqTestActionPerformed
        // TODO add your handling code here:
        String message = messagetxt.getText();
        if(message.equals(""))
        {
            JOptionPane.showMessageDialog(this, "Enter message for Child Request");
            return;
        }
        WorkRequestDoctor request = new WorkRequestDoctor();

        request.setMessage(message);
        request.setSender(userAccount);
        request.setStatusatDoctor("Sent");
        request.setPatient(patient);
        request.setName(this.patient.getName());

        Organization org = null;
        Enterprise ent=null;
        for(Enterprise e:entdir.getEnterpriseList())
        {
           // boolean flag = false;
            for (Organization organization :e.getOrgDir().getOrganizationList())
            {
                if (organization instanceof DoctorOrganization){
                    org = organization;
                    ent = e;
                   // flag = true;
                    break;
                }
            }
            //if(flag) break;
        }
       // if(ent!=null)
        //{
            if (org!=null)
            {
                org.getWorkQueue().getWorkRequestList().add(request);
                userAccount.getWorkQueue().getWorkRequestList().add(request);
            }
            populatePatientRequest();
      //  }
    }//GEN-LAST:event_reqTestActionPerformed

    
  public void populatePatientRequest(){
         
             DefaultTableModel model = (DefaultTableModel) requestTable.getModel(); 
       // WorkRequestCaretaker ass=null;   
        model.setRowCount(0);
        WorkRequestDoctor ass = null;
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()){
                if (request instanceof WorkRequestDoctor){
                ass = (WorkRequestDoctor) request;
                if(ass.getPatient().getName().equals(patient.getName())){
                
            Object[] row = new Object[9];
            row[0] = ass.getMessage();
            row[1] = ass.getReceiver();
            row[2] = ass.getStatusatDoctor();
            String result = ((WorkRequestDoctor) request).getAssignment();
            row[3] = result == null ? "Waiting" : result;
            row[4] = ass.getPatient().getName();
            row[5]=ass.getPatient().getAge();
             row[6]=ass.getPatient().getAddress();
             row[7]=ass.getProblem();
             row[8]=ass.getPrescription();
             
          
            
            model.addRow(row);
            messagetxt.setText("");
                
                }
               }
        
         }
      
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField messagetxt;
    private javax.swing.JLabel patientName;
    private javax.swing.JButton reqTest;
    private javax.swing.JTable requestTable;
    // End of variables declaration//GEN-END:variables
}
